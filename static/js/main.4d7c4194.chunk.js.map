{"version":3,"sources":["mock/mockedAlbums.js","mock/mockedSongs.js","redux/actions.js","redux/reducers.js","redux/store.js","components/Container.jsx","components/Loader.jsx","components/WaveSVG.jsx","components/AlbumItem.jsx","components/AlbumList.jsx","components/FavouriteButton.jsx","components/SongInfo.jsx","constants.js","components/Player.jsx","components/SongItem.jsx","components/SongList.jsx","components/NoMatch.jsx","App.jsx","index.js"],"names":["mockedAlbums","id","name","image","mockedSongs","author","duration","isFavourite","setLoadingStatus","isLoading","dispatch","type","payload","initialState","albums","songs","playedSong","store","createStore","state","action","songsCopy","favouriteIndex","findIndex","song","songId","prevSongIndex","currentIndex","length","nextSongIndex","playedSongIndex","applyMiddleware","thunk","Container","children","className","Loader","WaveSVG","xmlns","xmlnsXlink","viewBox","preserveAspectRatio","shapeRendering","d","xlinkHref","x","y","fill","AlbumItem","album","to","style","backgroundImage","AlbumList","useDispatch","useSelector","useEffect","fakeRequestTimeout","setTimeout","Promise","resolve","then","res","catch","err","console","error","finally","clearTimeout","map","key","FavouriteButton","onClick","SongInfo","size","Player","disabled","SongItem","isPlayed","handlePlaySong","SongList","albumId","useParams","setPlayedSong","NoMatch","location","useLocation","pathname","App","basename","process","exact","from","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7c4194.chunk.js","sourcesContent":["export const mockedAlbums = [\n\t{\n\t\tid: 1,\n\t\tname:  'Guitar',\n\t\timage: '/music-app-test-task/media/guitar.png'\n\t},\n\t{\n\t\tid: 2,\n\t\tname:  'Piano',\n\t\timage: '/music-app-test-task/media/piano.png'\n\t},\n\t{\n\t\tid: 3,\n\t\tname:  'Violoncelle',\n\t\timage: '/music-app-test-task/media/violoncelle.jpeg'\n\t},\n\t{\n\t\tid: 4,\n\t\tname:  'Glucophone',\n\t\timage: '/music-app-test-task/media/glucophone.jpeg'\n\t},\n\t{\n\t\tid: 5,\n\t\tname:  'Aileen',\n\t\timage: '/music-app-test-task/media/aileen.jpeg'\n\t},\n\t{\n\t\tid: 6,\n\t\tname:  'Guitar',\n\t\timage: '/music-app-test-task/media/guitar.png'\n\t},\n\t{\n\t\tid: 7,\n\t\tname:  'Piano',\n\t\timage: '/music-app-test-task/media/piano.png'\n\t},\n\t{\n\t\tid: 8,\n\t\tname:  'Violoncelle',\n\t\timage: '/music-app-test-task/media/violoncelle.jpeg'\n\t},\n\t{\n\t\tid: 9,\n\t\tname:  'Glucophone',\n\t\timage: '/music-app-test-task/media/glucophone.jpeg'\n\t},\n\t{\n\t\tid: 10,\n\t\tname:  'Aileen',\n\t\timage: '/music-app-test-task/media/aileen.jpeg'\n\t}\n];\n","export const mockedSongs = [\n\t{\n\t\tid: 1,\n\t\tname: 'Song 1',\n\t\tauthor: 'Author 1',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'Song 2',\n\t\tauthor: 'Author 2',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'Song 3',\n\t\tauthor: 'Author 3',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'Song 4',\n\t\tauthor: 'Author 4',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 6,\n\t\tname: 'Song 5',\n\t\tauthor: 'Author 5',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 7,\n\t\tname: 'Song 6',\n\t\tauthor: 'Author 6',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 8,\n\t\tname: 'Song 7',\n\t\tauthor: 'Author 7',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 9,\n\t\tname: 'Song 8',\n\t\tauthor: 'Author 8',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t},\n\t{\n\t\tid: 10,\n\t\tname: 'Song 8',\n\t\tauthor: 'Author 8',\n\t\tduration: '120000',\n\t\timage: null,\n\t\tisFavourite: false\n\t}\n];\n","import { mockedAlbums } from '../mock/mockedAlbums';\nimport { mockedSongs } from '../mock/mockedSongs';\n\nexport const SET_ALBUM_LIST = 'SET_ALBUM_LIST';\nexport const SET_SONG_LIST = 'SET_SONG_LIST';\nexport const SET_PLAYED_SONG = 'SET_PLAYED_SONG';\nexport const SET_LOADING_STATUS = 'SET_LOADING_STATUS';\nexport const SET_FAVOURITE_STATUS ='SET_FAVOURITE_STATUS';\nexport const SET_PREV_SONG = 'SET_PREV_SONG';\nexport const SET_NEXT_SONG = 'SET_NEXT_SONG';\n\nexport function getAlbums() {\n  return function(dispatch) {\n    Promise.resolve(mockedAlbums)\n      .then(res => {\n        dispatch({\n          type: SET_ALBUM_LIST,\n          payload: res\n        });\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        dispatch({\n          type: SET_LOADING_STATUS,\n          payload: false\n        });\n      });\n  }\n};\n\nexport function getSongs(albumId) {\n  return function(dispatch) {\n    Promise.resolve(mockedSongs)\n      .then(res => {\n        dispatch({\n          type: SET_SONG_LIST,\n          payload: res\n        });\n      })\n      .catch(err => console.error(err))\n      .finally(() => {\n        dispatch({\n          type: SET_LOADING_STATUS,\n          payload: false\n        });\n      });\n  }\n};\n\nexport function setPlayedSong(song) {\n  return function(dispatch) {\n    dispatch({\n      type: SET_PLAYED_SONG,\n      payload: song\n    });\n  }\n};\n\nexport function setLoadingStatus(isLoading) {\n  return function(dispatch) {\n    dispatch({\n      type: SET_LOADING_STATUS,\n      payload: isLoading\n    });\n  }\n};\n\nexport function setFavouriteStatus(payload) {\n  return function(dispatch) {\n    dispatch({\n      type: SET_FAVOURITE_STATUS,\n      payload\n    });\n  }\n};\n\nexport function setPrevSong() {\n  return function(dispatch) {\n    dispatch({\n      type: SET_PREV_SONG\n    });\n  }\n};\n\nexport function setNextSong() {\n  return function(dispatch) {\n    dispatch({\n      type: SET_NEXT_SONG\n    });\n  }\n};\n","import { \n  SET_ALBUM_LIST, \n  SET_SONG_LIST, \n  SET_PLAYED_SONG, \n  SET_LOADING_STATUS,\n  SET_FAVOURITE_STATUS,\n  SET_PREV_SONG,\n  SET_NEXT_SONG\n} from \"./actions\";\n\nconst initialState = {\n  albums: [],\n  songs: [],\n  playedSong: null,\n  isLoading: false\n};\n\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case SET_ALBUM_LIST:\n      return {\n        ...state,\n        albums: action.payload\n      };\n    case SET_SONG_LIST:\n      return {\n        ...state,\n        songs: action.payload\n      };\n    case SET_PLAYED_SONG: \n      return {\n        ...state,\n        playedSong: action.payload\n      };\n    case SET_FAVOURITE_STATUS:\n      const songsCopy = [ ...state.songs ];\n      const favouriteIndex = songsCopy.findIndex(song => song.id === action.payload.songId);\n      if (favouriteIndex) {\n        songsCopy[favouriteIndex].isFavourite = action.payload.isFavourite;\n      }\n\n      return {\n        ...state,\n        songs: songsCopy,\n        playedSong: {\n          ...state.playedSong,\n          isFavourite: action.payload.isFavourite\n        }\n      }\n    case SET_LOADING_STATUS:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case SET_PREV_SONG:\n      const currentIndex = state.songs.findIndex(song => song.id === state.playedSong.id);\n      let prevSongIndex;\n      if (currentIndex) {\n        prevSongIndex = currentIndex > 0 ? (currentIndex - 1) : (state.songs.length - 1);\n      }\n\n      return {\n        ...state,\n        playedSong: state.songs[prevSongIndex]\n      }\n    case SET_NEXT_SONG:\n      const playedSongIndex = state.songs.findIndex(song => song.id === state.playedSong.id);\n      let nextSongIndex;\n      if (playedSongIndex) {\n        nextSongIndex = playedSongIndex === state.songs.length ? 0 : (playedSongIndex + 1);\n      }\n\n      return {\n        ...state,\n        playedSong: state.songs[nextSongIndex]\n      }\n    default:\n      return state;\n  }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport { getNextState } from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(getNextState, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\n\nconst Container = ({\n\tchildren\n}) => (\n\t<div className=\"container\">\n\t\t{children}\n\t</div>\n);\n\nexport default Container;\n","import React from 'react';\n\nconst Loader = () => <>\n\t<div className='loader'></div>\n</>;\n\nexport default Loader;\n","import React from \"react\";\n\nconst WaveSVG = () => (\n\t<svg className=\"waves\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\txmlnsXlink=\"http://www.w3.org/1999/xlink\"\n\t\tviewBox=\"0 26 110 38\" preserveAspectRatio=\"none\" shapeRendering=\"auto\">\n\t\t<defs>\n\t\t\t<path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\n\t\t</defs>\n\t\t<g className=\"gentle-wave\">\n\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(121,17,153,0.3)\" />\n\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(121,17,153,0.2)\" />\n\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(121,17,153,0.3)\" />\n\t\t\t<use xlinkHref=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"rgba(121,17,153,0.2)\" />\n\t\t</g>\n\t</svg>\n);\n\nexport default WaveSVG;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport WaveSVG from './WaveSVG';\n\nconst AlbumItem = ({\n\talbum\n}) => (\n\t<div className=\"flex-col\">\n\t\t<Link\n\t\t\tto={`/albums/${album.id}/songs`}\n\t\t\tclassName='album-container'\n\t\t\tstyle={{ backgroundImage: `url(${album.image})` }}\n\t\t>\n\t\t\t<WaveSVG />\n\t\t\t<div className=\"album-name\">{ album.name }</div>\n\t\t</Link>\n\t</div>\n);\n\nexport default AlbumItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAlbums, setLoadingStatus } from '../redux/actions';\nimport Loader from './Loader';\nimport AlbumItem from './AlbumItem';\n\nconst AlbumList = () => {\n  const dispatch = useDispatch();\n  const albums = useSelector(store => store.albums);\n  const isLoading = useSelector(store => store.isLoading);\n\n  useEffect(() => {\n    dispatch(setLoadingStatus(true));\n\n    const fakeRequestTimeout = setTimeout(\n      () => {\n        dispatch(getAlbums());\n      },\n      1000\n    );\n\n    return () => clearTimeout(fakeRequestTimeout);\n  }, [dispatch]);\n\n  return <>\n    {isLoading\n      ? <Loader />\n      : <div className=\"album-list-container flex-container\">\n          {albums.map(album =>\n            <AlbumItem key={album.id} album={album} />\n          )}\n        </div>\n    }\n  </>\n}\n\nexport default AlbumList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFavouriteStatus } from '../redux/actions';\n\nconst FavouriteButton = () => {\n\tconst dispatch = useDispatch();\n\tconst playedSong = useSelector(state => state.playedSong);\n\n\tconst toggleFavourite = () => {\n\t\tdispatch(setFavouriteStatus({\n\t\t\tsongId:      playedSong.id,\n\t\t\tisFavourite: !playedSong.isFavourite\n\t\t}));\n\t};\n\n\treturn (\n\t\t<button\n\t\t\tclassName='player-btn-favourite'\n\t\t\tonClick={toggleFavourite}\n\t\t\tstyle={{ backgroundImage: `url('/music-app-test-task/media/${playedSong.isFavourite ? 'heart-full' : 'heart'}.svg')` }}\n\t\t></button>\n\t);\n};\n\nexport default FavouriteButton;\n","import React from 'react';\nimport { DEFAULT_SONG_IMAGE } from '../constants';\n\nconst SongInfo = ({\n\tsong,\n\tsize\n}) => <>\n\t<div className={`song-info-container ${size}`}>\n\t\t<div\n\t\t\tclassName=\"song-image\"\n\t\t\tstyle={{ backgroundImage: `url(${(song.image || DEFAULT_SONG_IMAGE)})` }}\n\t\t></div>\n\t\t<div className='song-info'>\n\t\t\t<div className=\"song-name\">{ song.name }</div>\n\t\t\t<div className=\"song-author\">{ song.author }</div>\n\t\t</div>\n\t</div>\n</>;\n\nexport default SongInfo;\n","export const DEFAULT_SONG_IMAGE = '/music-app-test-task/media/logo.svg';\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setNextSong, setPrevSong } from '../redux/actions';\nimport FavouriteButton from './FavouriteButton';\nimport SongInfo from './SongInfo';\n\nconst Player = () => {\n\tconst dispatch = useDispatch();\n\tconst playedSong = useSelector(store => store.playedSong);\n\n\tconst handlePrev = () => {\n\t\tdispatch(setPrevSong());\n\t};\n\n\tconst handleNext = () => {\n\t\tdispatch(setNextSong());\n\t};\n\n\tconst handlePlay = () => {\n\n\t};\n\n\treturn <div className='player-container'>\n\t\t<div className=\"player-song-info flex\">\n\t\t\t{playedSong \n\t\t\t\t? <>\n\t\t\t\t\t\t<SongInfo song={playedSong} size='large' />\n\t\t\t\t\t\t<FavouriteButton songId={playedSong.id} isFavourite={playedSong.isFavourite} />\n\t\t\t\t\t</>\n\t\t\t\t: <div className=\"player-empty\">\n\t\t\t\t\t\tChoose your mood...\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t\t<div className=\"player-progress\">\n\t\t\t<span className='player-progress-dot'></span>\n\t\t</div>\n\t\t<div className=\"player-actions flex\">\n\t\t\t<button \n\t\t\t\tclassName=\"player-btn player-btn-prev\" \n\t\t\t\tonClick={handlePrev}\n\t\t\t\tdisabled={!playedSong}\n\t\t\t></button>\n\t\t\t<button \n\t\t\t\tclassName=\"player-btn player-btn-play\" \n\t\t\t\tonClick={handlePlay}\n\t\t\t\tdisabled={!playedSong}\n\t\t\t></button>\n\t\t\t<button \n\t\t\t\tclassName=\"player-btn player-btn-next\" \n\t\t\t\tonClick={handleNext}\n\t\t\t\tdisabled={!playedSong}\n\t\t\t></button>\n\t\t</div>\n\t</div>\n};\n\nexport default Player;\n","import React from 'react';\nimport SongInfo from './SongInfo';\n\nconst SongItem = ({\n\tsong,\n\tisPlayed,\n\thandlePlaySong\n}) => (\n\t<div className={`song-container${isPlayed ? ' song-active' : ''}`}>\n\t\t<SongInfo song={song} size='small' />\n\t\t<div className='song-actions'>\n\t\t\t{song.isFavourite && (\n\t\t\t\t<div className='song-favourite'></div>\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName='button-play'\n\t\t\t\tonClick={() => handlePlaySong(song)}\n\t\t\t></button>\n\t\t</div>\n\t</div>\n);\n\nexport default SongItem;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSongs, setLoadingStatus, setPlayedSong } from '../redux/actions';\nimport Loader from './Loader';\nimport Player from './Player';\nimport SongItem from './SongItem';\n\nconst SongList = () => {\n  const { albumId } = useParams();\n\tconst dispatch = useDispatch();\n  const songs = useSelector(store => store.songs);\n  const playedSong = useSelector(store => store.playedSong);\n  const isLoading = useSelector(store => store.isLoading);\n\n  useEffect(() => {\n    dispatch(setLoadingStatus(true));\n\n\t\tconst fakeRequestTimeout = setTimeout(\n      () => {\n        dispatch(getSongs(albumId));\n      },\n      1000\n    );\n\n    return () => clearTimeout(fakeRequestTimeout);\n  }, [dispatch, albumId]);\n\n\tconst handlePlaySong = song => {\n\t\tdispatch(setPlayedSong(song));\n\t};\n\n  return <>\n      <Player />\n\n      <div className=\"container\">\n        {isLoading\n          ? <Loader />\n          : (songs.map(song =>\n            <SongItem\n              key={song.id} \n              song={song}\n              isPlayed={playedSong && song.id === playedSong.id}\n              handlePlaySong={handlePlaySong} \n            />\n          ))}\n      </div>\n  </>\n}\n\nexport default SongList;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n};\n\nexport default NoMatch;","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Container from './components/Container';\nimport AlbumList from './components/AlbumList';\nimport SongList from './components/SongList';\nimport NoMatch from './components/NoMatch';\n\nconst App = () => (\n  <Container>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Redirect exact from='/' to=\"/albums\" />\n        <Route exact path='/albums' >\n          <AlbumList />\n        </Route>\n        <Redirect exact from='/albums/:albumId' to=\"/albums/:albumId/songs\" />\n        <Route path='/albums/:albumId/songs' >\n          <SongList />\n        </Route>\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './App.scss';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}